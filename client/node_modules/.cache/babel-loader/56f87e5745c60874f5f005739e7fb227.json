{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\room\\\\Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Divider } from \"antd\";\nimport ConversationInput from \"./ConversationInput\";\nexport default function Dashboard({\n  userId\n}) {\n  //   const contacts = [];\n  //   const [contactIndex, setContactIndex] = useState(0);\n  //   const [selectedKey, setSelectedKey] = useState(0);\n  //   const changeSelectedKey = (event) => {\n  //     const key = event.key;\n  //     setSelectedKey(key);\n  //     setContactIndex(+key);\n  //   };\n  // const Contacts = {\n  //     <Contacts contacts={contacts} selectedKey={selectedKey} changeSelectedKey={changeSelectedKey} />\n  // };\n  return /*#__PURE__*/_jsxDEV(Divider, {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(ConversationInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/room/Dashboard.js"],"names":["React","useState","Divider","ConversationInput","Dashboard","userId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,2BAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KApBuBD,S","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Divider } from \"antd\";\r\n\r\nimport ConversationInput from \"./ConversationInput\";\r\n\r\nexport default function Dashboard({ userId }) {\r\n  //   const contacts = [];\r\n  //   const [contactIndex, setContactIndex] = useState(0);\r\n  //   const [selectedKey, setSelectedKey] = useState(0);\r\n  //   const changeSelectedKey = (event) => {\r\n  //     const key = event.key;\r\n  //     setSelectedKey(key);\r\n  //     setContactIndex(+key);\r\n  //   };\r\n\r\n  // const Contacts = {\r\n  //     <Contacts contacts={contacts} selectedKey={selectedKey} changeSelectedKey={changeSelectedKey} />\r\n  // };\r\n\r\n  return (\r\n    <Divider className=\"dashboard\">\r\n      {/* <Contacts userId={userId} /> */}\r\n      <ConversationInput />\r\n    </Divider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}