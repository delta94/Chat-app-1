{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\room\\\\Conversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { Divider, Button, Form, Input } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport Message from \"../room/Message\";\nimport \"../../css/Conversation.css\";\nexport default function Conversation({\n  userId,\n  location\n}) {\n  _s();\n\n  const formItemLayout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n  const buttonItemLayout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  console.log(messages);\n\n  const sendMessage = () => {\n    setMessages([...messages, {\n      userId: userId,\n      text: input\n    }]);\n    setInput(\"\");\n  };\n\n  useEffect(() => {\n    const data = queryString.parse(location.search);\n    console.log(location.search);\n    console.log(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-pane\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      className: \"name-displayed\",\n      children: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((message, key) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        userId: userId\n      }, shortid.generate(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      id: \"message-input\",\n      onFinish: sendMessage,\n      layout: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: [{\n          required: true\n        }],\n        ...formItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          placeholder: \"Enter a message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          style: {\n            height: \"20px\",\n            width: \"100%\",\n            resize: \"none\",\n            radius: \"20px\",\n            display: \"inline\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"sendButton\",\n        ...buttonItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"sendButton\",\n          type: \"primary\",\n          disabled: !input,\n          htmlType: \"submit\",\n          style: {\n            size: \"middle\",\n            shape: \"circle\",\n            backgroundColor: \"00BFFF\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Conversation, \"BKjx01IWf9U3K+nXc11gsN714uQ=\");\n\n_c = Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/room/Conversation.js"],"names":["React","useState","useEffect","shortid","queryString","io","Divider","Button","Form","Input","SendOutlined","Message","Conversation","userId","location","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","input","setInput","messages","setMessages","console","log","sendMessage","text","data","parse","search","map","message","key","generate","required","e","target","value","height","width","resize","radius","display","size","shape","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport { Divider, Button, Form, Input } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\n\r\nimport Message from \"../room/Message\";\r\nimport \"../../css/Conversation.css\";\r\n\r\nexport default function Conversation({ userId, location }) {\r\n  const formItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const buttonItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  console.log(messages);\r\n\r\n  const sendMessage = () => {\r\n    setMessages([...messages, { userId: userId, text: input }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = queryString.parse(location.search);\r\n\r\n    console.log(location.search);\r\n    console.log(data);\r\n  });\r\n\r\n  return (\r\n    <div className=\"conversation-pane\">\r\n      {/*For testing*/}\r\n      <Divider className=\"name-displayed\">{userId}</Divider>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.map((message, key) => (\r\n          <Message key={shortid.generate()} message={message} userId={userId} />\r\n        ))}\r\n      </div>\r\n\r\n      <Form id=\"message-input\" onFinish={sendMessage} layout=\"inline\">\r\n        <Form.Item rules={[{ required: true }]} {...formItemLayout}>\r\n          <Input.TextArea\r\n            placeholder=\"Enter a message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            style={{\r\n              height: \"20px\",\r\n              width: \"100%\",\r\n              resize: \"none\",\r\n              radius: \"20px\",\r\n              display: \"inline\",\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name=\"sendButton\" {...buttonItemLayout}>\r\n          <Button\r\n            className=\"sendButton\"\r\n            type=\"primary\"\r\n            disabled={!input}\r\n            htmlType=\"submit\"\r\n            style={{\r\n              size: \"middle\",\r\n              shape: \"circle\",\r\n              backgroundColor: \"00BFFF\",\r\n            }}\r\n            icon={<SendOutlined />}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}