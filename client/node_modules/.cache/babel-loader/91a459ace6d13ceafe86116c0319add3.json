{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\LoginForm.js\";\nimport React from \"react\";\nimport ChatWindow from \"./ChatWindow\";\nimport { Form, Input, Button, Divider } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nconst initialState = {\n  username: \"\",\n  userId: \"\"\n};\nexport default class LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      userId: \"\",\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        initialState,\n        submitted: true\n      });\n    };\n  }\n\n  render() {\n    if (this.state.submitted) {\n      return /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(ChatWindow, {\n          className: \"chat-window\",\n          username: this.state.username,\n          userId: this.state.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Divider, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          textAlign: \"center\",\n          display: \"block\"\n        },\n        children: \"Enter your user name and user id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"login-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n          initialValues: {\n            remember: true\n          },\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"userId\",\n            name: \"userId\",\n            rules: [{\n              required: true,\n              message: \"Please enter your user id\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter your user id\",\n              value: this.state.userId,\n              type: \"text\",\n              onChange: event => this.handleChange(event),\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"username\",\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please enter your username\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter your username\",\n              onChange: event => this.handleChange(event),\n              value: this.state.username,\n              type: \"text\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              target: \"_blank\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/LoginForm.js"],"names":["React","ChatWindow","Form","Input","Button","Divider","layout","labelCol","span","wrapperCol","tailLayout","offset","initialState","username","userId","LoginForm","Component","state","submitted","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","render","fontWeight","fontSize","textAlign","display","remember","required","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ChatWindow from \"./ChatWindow\";\r\n\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  userId: \"\",\r\n};\r\n\r\nexport default class LoginForm extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    userId: \"\",\r\n    submitted: false,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ initialState, submitted: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.submitted) {\r\n      return (\r\n        <Divider className=\"container\">\r\n          <ChatWindow\r\n            className=\"chat-window\"\r\n            username={this.state.username}\r\n            userId={this.state.userId}\r\n          />\r\n        </Divider>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Divider className=\"container\">\r\n        <h1\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontSize: 18,\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n          }}\r\n        >\r\n          Enter your user name and user id\r\n        </h1>\r\n        <br />\r\n        <Divider className=\"login-form\">\r\n          <Form\r\n            {...layout}\r\n            initialValues={{ remember: true }}\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <Form.Item\r\n              label=\"userId\"\r\n              name=\"userId\"\r\n              rules={[{ required: true, message: \"Please enter your user id\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter your user id\"\r\n                value={this.state.userId}\r\n                type=\"text\"\r\n                onChange={(event) => this.handleChange(event)}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please enter your username\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter your username\"\r\n                onChange={(event) => this.handleChange(event)}\r\n                value={this.state.username}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\" target=\"_blank\">\r\n                Login\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Divider>\r\n      </Divider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}