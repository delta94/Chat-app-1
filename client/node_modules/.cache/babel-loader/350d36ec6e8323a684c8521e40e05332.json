{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\room\\\\Conversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { Divider, Button, Form, Input } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport Messages from \"../room/Messages\";\nimport Status from \"../room/Status\";\nimport UploadFile from \"./UploadFile\";\nimport \"../../css/Conversation.css\";\nlet socket;\n\nconst Conversation = ({\n  userName,\n  location\n}) => {\n  _s();\n\n  // const formItemLayout = {\n  //   labelCol: { span: 24 },\n  //   wrapperCol: { span: 24 },\n  // };\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const buttonItemLayout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  useEffect(() => {\n    socket = io.connect(ENDPOINT);\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"login\", {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-pane\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      className: \"status\",\n      children: /*#__PURE__*/_jsxDEV(Status, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        id: \"message-input\",\n        onFinish: sendMessage,\n        layout: \"inline\",\n        style: {\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(UploadFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          rules: [{\n            required: true\n          }],\n          ...layout,\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            placeholder: \"Enter a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onPressEnter: e => sendMessage(e),\n            style: {\n              height: \"20px\",\n              width: \"100%\",\n              resize: \"none\",\n              radius: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"sendButton\",\n          ...buttonItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"sendButton\",\n            type: \"primary\",\n            disabled: !message,\n            onClick: e => sendMessage(e),\n            htmlType: \"submit\",\n            style: {\n              size: \"middle\",\n              shape: \"circle\",\n              backgroundColor: \"00BFFF\"\n            },\n            icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversation, \"9fD7Lnsg8tiVWhs3+X7UotE5qu8=\");\n\n_c = Conversation;\nexport default Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/room/Conversation.js"],"names":["React","useState","useEffect","queryString","io","Divider","Button","Form","Input","SendOutlined","Messages","Status","UploadFile","socket","Conversation","userName","location","layout","labelCol","span","wrapperCol","buttonItemLayout","message","setMessage","messages","setMessages","name","setName","room","setRoom","ENDPOINT","sendMessage","event","preventDefault","emit","connect","parse","search","off","on","alignItems","required","e","target","value","height","width","resize","radius","size","shape","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport { Divider, Button, Form, Input } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\n\r\nimport Messages from \"../room/Messages\";\r\nimport Status from \"../room/Status\";\r\nimport UploadFile from \"./UploadFile\";\r\nimport \"../../css/Conversation.css\";\r\n\r\nlet socket;\r\n\r\nconst Conversation = ({ userName, location }) => {\r\n  // const formItemLayout = {\r\n  //   labelCol: { span: 24 },\r\n  //   wrapperCol: { span: 24 },\r\n  // };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  const buttonItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const ENDPOINT = \"localhost:5000\";\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io.connect(ENDPOINT);\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"login\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-pane\">\r\n      <Divider className=\"status\">\r\n        <Status room={room} />\r\n      </Divider>\r\n      <div className=\"messages\">\r\n        <Messages messages={messages} name={name} />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <Form\r\n          id=\"message-input\"\r\n          onFinish={sendMessage}\r\n          layout=\"inline\"\r\n          style={{ alignItems: \"center\" }}\r\n        >\r\n          <Form.Item>\r\n            <UploadFile />\r\n          </Form.Item>\r\n          <Form.Item rules={[{ required: true }]} {...layout}>\r\n            <Input.TextArea\r\n              placeholder=\"Enter a message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onPressEnter={(e) => sendMessage(e)}\r\n              style={{\r\n                height: \"20px\",\r\n                width: \"100%\",\r\n                resize: \"none\",\r\n                radius: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"sendButton\" {...buttonItemLayout}>\r\n            <Button\r\n              className=\"sendButton\"\r\n              type=\"primary\"\r\n              disabled={!message}\r\n              onClick={(e) => sendMessage(e)}\r\n              htmlType=\"submit\"\r\n              style={{\r\n                size: \"middle\",\r\n                shape: \"circle\",\r\n                backgroundColor: \"00BFFF\",\r\n              }}\r\n              icon={<SendOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n"]},"metadata":{},"sourceType":"module"}