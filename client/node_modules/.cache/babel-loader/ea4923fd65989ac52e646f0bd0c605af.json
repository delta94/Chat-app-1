{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ChatWindow from \"./ChatWindow\";\nimport { Form, Input, Button, Divider } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nconst initialState = {\n  username: \"\",\n  userId: \"\"\n};\nexport default function LoginForm() {\n  _s();\n\n  const [input, setInput] = useState(initialState);\n  const nameRef = useRef();\n  const idRef = useRef();\n\n  function handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleSubmit(event) {}\n\n  if (this.state.submitted) {\n    return /*#__PURE__*/_jsxDEV(Divider, {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(ChatWindow, {\n        className: \"chat-window\",\n        username: this.state.username,\n        userId: this.state.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Divider, {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 18,\n        textAlign: \"center\",\n        display: \"block\"\n      },\n      children: \"Enter your user name and user id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n        initialValues: {\n          remember: true\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Id\",\n          name: \"userId\",\n          rules: [{\n            required: true,\n            message: \"Please enter your user id\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your user id\",\n            value: this.state.userId || \"\",\n            type: \"text\",\n            ref: idRef,\n            onChange: event => this.handleChange(event),\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: \"Please enter your username\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your username\",\n            value: this.state.username || \"\",\n            type: \"text\",\n            ref: nameRef,\n            onChange: event => this.handleChange(event),\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            target: \"_blank\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"u12SFZJpQ64Q2GhjRbXTZFfR+J0=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/LoginForm.js"],"names":["React","useState","useRef","ChatWindow","Form","Input","Button","Divider","layout","labelCol","span","wrapperCol","tailLayout","offset","initialState","username","userId","LoginForm","input","setInput","nameRef","idRef","handleChange","event","setState","target","name","value","handleSubmit","state","submitted","fontWeight","fontSize","textAlign","display","remember","required","message"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ChatWindow from \"./ChatWindow\";\r\n\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  userId: \"\",\r\n};\r\n\r\nexport default function LoginForm() {\r\n  const [input, setInput] = useState(initialState);\r\n\r\n  const nameRef = useRef();\r\n  const idRef = useRef();\r\n\r\n  function handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {}\r\n\r\n  if (this.state.submitted) {\r\n    return (\r\n      <Divider className=\"container\">\r\n        <ChatWindow\r\n          className=\"chat-window\"\r\n          username={this.state.username}\r\n          userId={this.state.userId}\r\n        />\r\n      </Divider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Divider className=\"login-container\">\r\n      <h1\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontSize: 18,\r\n          textAlign: \"center\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        Enter your user name and user id\r\n      </h1>\r\n      <br />\r\n      <Divider className=\"login-form\">\r\n        <Form\r\n          {...layout}\r\n          initialValues={{ remember: true }}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"Id\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"Please enter your user id\" }]}\r\n          >\r\n            <Input\r\n              placeholder=\"Enter your user id\"\r\n              value={this.state.userId || \"\"}\r\n              type=\"text\"\r\n              ref={idRef}\r\n              onChange={(event) => this.handleChange(event)}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please enter your username\" }]}\r\n          >\r\n            <Input\r\n              placeholder=\"Enter your username\"\r\n              value={this.state.username || \"\"}\r\n              type=\"text\"\r\n              ref={nameRef}\r\n              onChange={(event) => this.handleChange(event)}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\" target=\"_blank\">\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Divider>\r\n    </Divider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}