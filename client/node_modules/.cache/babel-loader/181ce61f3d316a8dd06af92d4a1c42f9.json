{"ast":null,"code":"import _objectSpread from\"E:/Dev/Project/MessengerClone/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"E:/Dev/Project/MessengerClone/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/Dev/Project/MessengerClone/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import queryString from\"query-string\";import io from\"socket.io-client\";import{Divider,Button,Form,Input}from\"antd\";import{SendOutlined}from\"@ant-design/icons\";import Messages from\"../room/Messages\";import Status from\"../room/Status\";import UploadFile from\"./UploadFile\";import\"../../css/Conversation.css\";var socket;var Conversation=function Conversation(_ref){var userName=_ref.userName,location=_ref.location;var formItemLayout={labelCol:{span:24},wrapperCol:{span:24}};var buttonItemLayout={labelCol:{span:24},wrapperCol:{span:24}};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),room=_useState8[0],setRoom=_useState8[1];var ENDPOINT=\"https://sadchat.herokuapp.com/\";var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit(\"sendMessage\",message,function(){return setMessage(\"\");});}};useEffect(function(){socket=io.connect(ENDPOINT);var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;setName(name);setRoom(room);socket.emit(\"login\",{name:name,room:room},function(){});return function(){socket.emit(\"disconnect\");socket.off();};},[ENDPOINT,location.search]);useEffect(function(){socket.on(\"message\",function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});},[messages]);return/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-pane\",children:[/*#__PURE__*/_jsx(Divider,{className:\"status\",children:/*#__PURE__*/_jsx(Status,{room:room})}),/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(Messages,{messages:messages,name:name})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-field\",children:/*#__PURE__*/_jsxs(Form,{id:\"message-input\",onFinish:sendMessage,layout:\"inline\",style:{alignItems:\"center\"},children:[/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(UploadFile,{})}),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({rules:[{required:true}]},formItemLayout),{},{children:/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Enter a message...\",value:message,onChange:function onChange(e){return setMessage(e.target.value);},onPressEnter:function onPressEnter(e){return sendMessage(e);},style:{height:\"20px\",width:\"100%\",resize:\"none\",radius:\"20px\"}})})),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({name:\"sendButton\"},buttonItemLayout),{},{children:/*#__PURE__*/_jsx(Button,{className:\"sendButton\",type:\"primary\",disabled:!message,onClick:function onClick(e){return sendMessage(e);},htmlType:\"submit\",style:{size:\"middle\",shape:\"circle\",backgroundColor:\"00BFFF\"},icon:/*#__PURE__*/_jsx(SendOutlined,{})})}))]})})]});};export default Conversation;","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/room/Conversation.js"],"names":["React","useState","useEffect","queryString","io","Divider","Button","Form","Input","SendOutlined","Messages","Status","UploadFile","socket","Conversation","userName","location","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","message","setMessage","messages","setMessages","name","setName","room","setRoom","ENDPOINT","sendMessage","event","preventDefault","emit","connect","parse","search","off","on","alignItems","required","e","target","value","height","width","resize","radius","size","shape","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport { Divider, Button, Form, Input } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\n\r\nimport Messages from \"../room/Messages\";\r\nimport Status from \"../room/Status\";\r\nimport UploadFile from \"./UploadFile\";\r\nimport \"../../css/Conversation.css\";\r\n\r\nlet socket;\r\n\r\nconst Conversation = ({ userName, location }) => {\r\n  const formItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const buttonItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const ENDPOINT = \"https://sadchat.herokuapp.com/\";\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io.connect(ENDPOINT);\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"login\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-pane\">\r\n      <Divider className=\"status\">\r\n        <Status room={room} />\r\n      </Divider>\r\n      <div className=\"messages\">\r\n        <Messages messages={messages} name={name} />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <Form\r\n          id=\"message-input\"\r\n          onFinish={sendMessage}\r\n          layout=\"inline\"\r\n          style={{ alignItems: \"center\" }}\r\n        >\r\n          <Form.Item>\r\n            <UploadFile />\r\n          </Form.Item>\r\n          <Form.Item rules={[{ required: true }]} {...formItemLayout}>\r\n            <Input.TextArea\r\n              placeholder=\"Enter a message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onPressEnter={(e) => sendMessage(e)}\r\n              style={{\r\n                height: \"20px\",\r\n                width: \"100%\",\r\n                resize: \"none\",\r\n                radius: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"sendButton\" {...buttonItemLayout}>\r\n            <Button\r\n              className=\"sendButton\"\r\n              type=\"primary\"\r\n              disabled={!message}\r\n              onClick={(e) => sendMessage(e)}\r\n              htmlType=\"submit\"\r\n              style={{\r\n                size: \"middle\",\r\n                shape: \"circle\",\r\n                backgroundColor: \"00BFFF\",\r\n              }}\r\n              icon={<SendOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n"]},"metadata":{},"sourceType":"module"}