{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Divider } from \"antd\";\nimport shortid from \"shortid\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nexport default function LoginForm() {\n  _s();\n\n  const [submitted, setSubmitted] = useState(false);\n  const [id, setId] = useState();\n\n  const handleSubmit = () => {\n    setSubmitted(current => !current);\n  };\n\n  useEffect(() => {\n    console.log(submitted);\n  }, [submitted]);\n\n  function createNewId() {\n    setId(() => {\n      shortid.generate();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Divider, {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 18,\n        textAlign: \"center\",\n        display: \"block\"\n      },\n      children: \"Enter your user ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n        initialValues: {\n          remember: true\n        },\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Id\",\n          name: \"userId\",\n          rules: [{\n            required: true,\n            message: \"Please enter your user id\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your user id\",\n            type: \"text\",\n            name: \"userId\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"secondary\",\n            onClick: createNewId,\n            className: \"new-id-btn\",\n            children: \"Create new Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"2NWPCyaFJ2XsWHge/nclMkOqhh4=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/LoginForm.js"],"names":["React","useState","useEffect","Form","Input","Button","Divider","shortid","layout","labelCol","span","wrapperCol","LoginForm","submitted","setSubmitted","id","setId","handleSubmit","current","console","log","createNewId","generate","fontWeight","fontSize","textAlign","display","remember","required","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA6C,MAA7C;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAKbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AALC,CAAf;AAUA,eAAe,SAASE,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,EAAD,EAAKC,KAAL,IAAcf,QAAQ,EAA5B;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACzBH,IAAAA,YAAY,CAAEI,OAAD,IAAa,CAACA,OAAf,CAAZ;AACD,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;;AAIA,WAASQ,WAAT,GAAuB;AACrBL,IAAAA,KAAK,CAAC,MAAM;AACVT,MAAAA,OAAO,CAACe,QAAR;AACD,KAFI,CAAL;AAGD;;AAED,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,MADP;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,SAAS,EAAE,QAHN;AAILC,QAAAA,OAAO,EAAE;AAJJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,6BACE,QAAC,IAAD,OACMlB,MADN;AAEE,QAAA,aAAa,EAAE;AAAEmB,UAAAA,QAAQ,EAAE;AAAZ,SAFjB;AAGE,QAAA,QAAQ,EAAEV,YAHZ;AAAA,gCAKE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,KAAK,EAAC,IADR;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAE,CAAC;AAAEW,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAHT;AAAA,iCAKE,QAAC,KAAD;AACE,YAAA,WAAW,EAAC,oBADd;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,YAAY,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBALF,eAkBE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,WADP;AAEE,YAAA,OAAO,EAAER,WAFX;AAGE,YAAA,SAAS,EAAC,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GAlEuBT,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\nimport shortid from \"shortid\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function LoginForm() {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [id, setId] = useState();\r\n\r\n  const handleSubmit = () => {\r\n    setSubmitted((current) => !current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(submitted);\r\n  }, [submitted]);\r\n\r\n  function createNewId() {\r\n    setId(() => {\r\n      shortid.generate();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Divider className=\"login-container\">\r\n      <h1\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontSize: 18,\r\n          textAlign: \"center\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        Enter your user ID\r\n      </h1>\r\n      <br />\r\n      <Divider className=\"login-form\">\r\n        <Form\r\n          {...layout}\r\n          initialValues={{ remember: true }}\r\n          onFinish={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"Id\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"Please enter your user id\" }]}\r\n          >\r\n            <Input\r\n              placeholder=\"Enter your user id\"\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n            <Button\r\n              type=\"secondary\"\r\n              onClick={createNewId}\r\n              className=\"new-id-btn\"\r\n            >\r\n              Create new Id\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Divider>\r\n    </Divider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}