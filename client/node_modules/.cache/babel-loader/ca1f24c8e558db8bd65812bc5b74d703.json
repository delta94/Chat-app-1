{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Divider } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Conversation from \"../components/room/Conversation\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst LoginForm = () => {\n  _s();\n\n  const [submitted, setSubmitted] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const handleSubmit = () => {\n    console.log(id);\n    setSubmitted(current => !current);\n  };\n\n  useEffect(() => {\n    console.log(submitted);\n  }, [submitted]);\n\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Conversation, {\n        userId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Divider, {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 18,\n        textAlign: \"center\",\n        display: \"block\"\n      },\n      children: \"Enter your user ID and room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n        initialValues: {\n          remember: true\n        },\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Id\",\n          name: \"userId\",\n          rules: [{\n            required: true,\n            message: \"Please enter your user id\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: id,\n            placeholder: \"Enter your user id\",\n            type: \"text\",\n            name: \"userId\",\n            autoComplete: \"off\",\n            onChange: event => setId(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"room\",\n          name: \"room\",\n          rules: [{\n            required: true,\n            message: \"Please enter room id\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: room,\n            placeholder: \"Enter room id\",\n            type: \"text\",\n            name: \"room\",\n            autoComplete: \"off\",\n            onChange: event => setRoom(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: event => !id || !room ? event.preventDefault() : null,\n            to: `/conversation?id=${id}&room=${room}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"Q6bylZa2IZzwQyZc5dVPHEcLmzY=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/LoginForm.js"],"names":["React","useState","useEffect","Form","Input","Button","Divider","Link","Conversation","layout","labelCol","span","wrapperCol","LoginForm","submitted","setSubmitted","id","setId","room","setRoom","handleSubmit","console","log","current","fontWeight","fontSize","textAlign","display","remember","required","message","event","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Conversation from \"../components/room/Conversation\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(id);\r\n    setSubmitted((current) => !current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(submitted);\r\n  }, [submitted]);\r\n\r\n  if (submitted) {\r\n    return (\r\n      <div>\r\n        <Conversation userId={id} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Divider className=\"login-container\">\r\n      <h1\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontSize: 18,\r\n          textAlign: \"center\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        Enter your user ID and room\r\n      </h1>\r\n      <br />\r\n      <div className=\"login-form\">\r\n        <Form\r\n          {...layout}\r\n          initialValues={{ remember: true }}\r\n          onFinish={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"Id\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"Please enter your user id\" }]}\r\n          >\r\n            <Input\r\n              value={id}\r\n              placeholder=\"Enter your user id\"\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              autoComplete=\"off\"\r\n              onChange={(event) => setId(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"room\"\r\n            name=\"room\"\r\n            rules={[{ required: true, message: \"Please enter room id\" }]}\r\n          >\r\n            <Input\r\n              value={room}\r\n              placeholder=\"Enter room id\"\r\n              type=\"text\"\r\n              name=\"room\"\r\n              autoComplete=\"off\"\r\n              onChange={(event) => setRoom(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Link\r\n              onClick={(event) =>\r\n                !id || !room ? event.preventDefault() : null\r\n              }\r\n              to={`/conversation?id=${id}&room=${room}`}\r\n            >\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Login\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Divider>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}