{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Dev\\\\Project\\\\MessengerClone\\\\chat-app\\\\client\\\\src\\\\components\\\\room\\\\UpLoadFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Form from \"antd/lib/form/Form\";\n\nconst UpLoadFile = () => {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose file\");\n\n  const changeFile = event => {\n    setFile(event.target.files[0]);\n    setFilename(event.target.files[0].name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: filename,\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        className: \"user-file-input\",\n        id: \"user-file\",\n        onChange: changeFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) // <React.Fragment>\n  //   <form>\n  //     <div>\n  //       <input id=\"customFile\" type=\"file\" onChange={changeFile} />\n  //       <label htmlFor=\"customFile\">{filename}</label>\n  //     </div>\n  //   </form>\n  // </React.Fragment>\n  ;\n};\n\n_s(UpLoadFile, \"6qRIq3S4k/LxzbnLPgx6aUgwVpY=\");\n\n_c = UpLoadFile;\nexport default UpLoadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpLoadFile\");","map":{"version":3,"sources":["E:/Dev/Project/MessengerClone/chat-app/client/src/components/room/UpLoadFile.js"],"names":["React","useState","Button","Input","UploadOutlined","Form","UpLoadFile","file","setFile","filename","setFilename","changeFile","event","target","files","name","required"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,aAAD,CAAxC;;AAEA,QAAMU,UAAU,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP;AACAJ,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAAvB,CAAX;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAEN,QAAlB;AAA4B,MAAA,KAAK,EAAE,CAAC;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAAnC;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,EAAE,EAAC,WAHL;AAIE,QAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAWE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBF;AAoBD,CA7BD;;GAAML,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Button, Input } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport Form from \"antd/lib/form/Form\";\r\n\r\nconst UpLoadFile = () => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n\r\n  const changeFile = (event) => {\r\n    setFile(event.target.files[0]);\r\n    setFilename(event.target.files[0].name);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Item label={filename} rules={[{ required: true }]}>\r\n        <Input\r\n          type=\"file\"\r\n          className=\"user-file-input\"\r\n          id=\"user-file\"\r\n          onChange={changeFile}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n    // <React.Fragment>\r\n    //   <form>\r\n    //     <div>\r\n    //       <input id=\"customFile\" type=\"file\" onChange={changeFile} />\r\n    //       <label htmlFor=\"customFile\">{filename}</label>\r\n    //     </div>\r\n    //   </form>\r\n    // </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpLoadFile;\r\n"]},"metadata":{},"sourceType":"module"}