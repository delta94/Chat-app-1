{"version":3,"sources":["components/room/Conversation.js","components/room/Message.js","components/room/Messages.js","components/room/Status.js","components/room/UploadFile.js","components/LoginForm.js","App.js","index.js"],"names":["socket","Text","Typography","Message","message","text","user","name","sentByMe","trim","toLowerCase","className","style","width","alignItems","classNme","Messages","messages","map","index","Status","room","src","alt","Dragger","Upload","UploadFile","useState","setUploaded","props","multiple","accept","action","onChange","info","status","file","console","log","fileList","success","error","UploadOutlined","Conversation","userName","location","setMessage","setMessages","setName","setRoom","ENDPOINT","sendMessage","event","preventDefault","emit","useEffect","io","connect","queryString","parse","search","off","on","id","onFinish","layout","Item","rules","required","labelCol","span","wrapperCol","TextArea","placeholder","value","e","target","onPressEnter","height","resize","radius","type","disabled","onClick","htmlType","size","shape","backgroundColor","icon","SendOutlined","LoginForm","submitted","setSubmitted","fontWeight","fontSize","textAlign","display","initialValues","remember","current","label","autoComplete","to","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.726e815c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport { Divider, Button, Form, Input } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\n\r\nimport Messages from \"../room/Messages\";\r\nimport Status from \"../room/Status\";\r\nimport UploadFile from \"./UploadFile\";\r\nimport \"../../css/Conversation.css\";\r\n\r\nlet socket;\r\n\r\nconst Conversation = ({ userName, location }) => {\r\n  const formItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const buttonItemLayout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const ENDPOINT = \"https://sadchat.herokuapp.com/\";\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io.connect(ENDPOINT);\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"login\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-pane\">\r\n      <Divider className=\"status\">\r\n        <Status room={room} />\r\n      </Divider>\r\n      <div className=\"messages\">\r\n        <Messages messages={messages} name={name} />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <Form\r\n          id=\"message-input\"\r\n          onFinish={sendMessage}\r\n          layout=\"inline\"\r\n          style={{ alignItems: \"center\" }}\r\n        >\r\n          <Form.Item>\r\n            <UploadFile />\r\n          </Form.Item>\r\n          <Form.Item rules={[{ required: true }]} {...formItemLayout}>\r\n            <Input.TextArea\r\n              placeholder=\"Enter a message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onPressEnter={(e) => sendMessage(e)}\r\n              style={{\r\n                height: \"20px\",\r\n                width: \"100%\",\r\n                resize: \"none\",\r\n                radius: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"sendButton\" {...buttonItemLayout}>\r\n            <Button\r\n              className=\"sendButton\"\r\n              type=\"primary\"\r\n              disabled={!message}\r\n              onClick={(e) => sendMessage(e)}\r\n              htmlType=\"submit\"\r\n              style={{\r\n                size: \"middle\",\r\n                shape: \"circle\",\r\n                backgroundColor: \"00BFFF\",\r\n              }}\r\n              icon={<SendOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","import React from \"react\";\r\n\r\nimport { Card, Typography } from \"antd\";\r\n\r\nimport \"../../css/Message.css\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst Message = ({ message: { text, user }, name }) => {\r\n  let sentByMe = false;\r\n\r\n  if (user === name.trim().toLowerCase()) {\r\n    sentByMe = true;\r\n  }\r\n\r\n  return sentByMe ? (\r\n    <div className=\"messageContainer\">\r\n      <p className=\"sentText\">{name}</p>\r\n      <Card\r\n        style={{ width: 300, alignItems: \"right\" }}\r\n        className=\"message-by-me\"\r\n      >\r\n        <Text className=\"content\">{text}</Text>\r\n      </Card>\r\n    </div>\r\n  ) : (\r\n    <div className=\"messageContainer\">\r\n      <p classNme=\"sentText\">{user}</p>\r\n      <Card\r\n        style={{ width: 300, alignItems: \"left\" }}\r\n        className=\"message-by-guest\"\r\n      >\r\n        <Text className=\"content\">{text}</Text>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\n\r\nimport Message from \"./Message\";\r\n\r\nconst Messages = ({ messages, name }) => {\r\n  return (\r\n    <ScrollToBottom className=\"messages\">\r\n      {messages.map((message, index) => (\r\n        <div className=\"message-container\" key={index}>\r\n          <Message message={message} name={name} />\r\n        </div>\r\n      ))}\r\n    </ScrollToBottom>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\n\r\nimport { Divider } from \"antd\";\r\n\r\nconst Status = ({ room }) => {\r\n  return (\r\n    <Divider className=\"status-bar\">\r\n      <div className=\"online-status\">\r\n        <img\r\n          className=\"onlineIcon\"\r\n          src=\"../../resources/green-online-ico.png\"\r\n          alt=\"online status\"\r\n        />\r\n        <h4>{room}</h4>\r\n      </div>\r\n    </Divider>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\nimport { Upload, message } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst UploadFile = () => {\r\n  const [uploaded, setUploaded] = useState(false);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: false,\r\n    accept: \"image/*\",\r\n    action: \"http://localhost:5000/file\",\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === \"done\") {\r\n        message.success(`${info.file.name} uploaded successfully`);\r\n        setUploaded(true);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed`);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dragger {...props} style={{ width: 80 }}>\r\n        <UploadOutlined />\r\n      </Dragger>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Conversation from \"../components/room/Conversation\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(name);\r\n    setSubmitted((current) => !current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(submitted);\r\n  }, [submitted]);\r\n\r\n  if (submitted) {\r\n    return (\r\n      <div>\r\n        <Conversation userName={name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Divider className=\"login-container\">\r\n      <h1\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontSize: 18,\r\n          textAlign: \"center\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        Enter your username and room\r\n      </h1>\r\n      <br />\r\n      <div className=\"login-form\">\r\n        <Form\r\n          {...layout}\r\n          initialValues={{ remember: true }}\r\n          onFinish={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"name\"\r\n            name=\"userName\"\r\n            rules={[{ required: true, message: \"Please enter your user id\" }]}\r\n          >\r\n            <Input\r\n              value={name}\r\n              placeholder=\"Enter your username\"\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              autoComplete=\"off\"\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"room\"\r\n            name=\"room\"\r\n            rules={[{ required: true, message: \"Please enter room id\" }]}\r\n          >\r\n            <Input\r\n              value={room}\r\n              placeholder=\"Enter room id\"\r\n              type=\"text\"\r\n              name=\"room\"\r\n              autoComplete=\"off\"\r\n              onChange={(event) => setRoom(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Link\r\n              onClick={(event) =>\r\n                !name || !room ? event.preventDefault() : null\r\n              }\r\n              to={`/conversation?name=${name}&room=${room}`}\r\n            >\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Login\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Divider>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport LoginForm from \"./components/LoginForm\";\nimport Conversation from \"./components/room/Conversation\";\n//import useLocalStorage from \"./hooks/useLocalStorage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={LoginForm} />\n      <Route path=\"/conversation\" component={Conversation} />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}